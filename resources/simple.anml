/**
 * Dream World domain in ANML
 * 
 * so far adapted for the clean table example
 *   
 * Filip Dvořák <filip.dvorak@runbox.com>
 * LAAS-CNRS
 *  
 * version 0.1 [draft]    
 * version 0.2 [prepared for parsing]    
 * version 0.3 [getting ready for execution]    
 * version 0.4 [realistic example]     
 * version 0.5 [action-addition example]
 * version 0.6 [running addition example]       
 * 
 * TODO:
 *  - sanity checks
 *     
 */ 


type Location < object;

type Gripper < Location with {
  variable boolean empty;
};

type Robot < object with {
  variable Location mLocation;
  variable Gripper left;
  variable Gripper right;
};

type Item < object with {
  variable Location mLocation;
  variable boolean onTable;
};

/**
 * defining actions
 */
 
 
/**
 * pick some item s with robor r, at location l 
 */  

action PickWithRightGripper(Robot r, Gripper g, Item s, Location l){
        
  [all]{
    r.right == g;
    g.empty == true :-> false;
    r.mLocation == l;
    s.mLocation == l :-> g; 
  };
};

action DropWithRightGripper(Robot r, Gripper g, Item s, Location l){
  
  [all]{
    r.right == g;
    g.empty == false :-> true;
    r.mLocation == l;
    s.mLocation == g :-> l; 
  };
   
}; 

action Move(Robot r, Location a, Location b){
  
  [start,end]{
    r.mLocation == a :-> b;
  };
  
}; 


/**
 * we can declare instance of types that represent the objects in our world
 */ 
instance Robot PR2;
instance Gripper G1,G2;
instance Item Sb;
instance Location Corner, Door_exp_room_inside, Door_exp_room_outside, Door_adream_bldg, Lift, Lift_down, Lift_door, Kitchen, Kuka, Yuka, Home, Dining_room, Bedroom, Coach;

/**
 * we can make any assignements on the objects with temporal specifications
 */ 
 
[start] {
 PR2.mLocation := Dining_room;
 Sb.mLocation := Dining_room;
 G1.empty := true;
 G2.empty := true;
};

[all]{ 
 PR2.left := G1;
 PR2.right := G2;
};


 /**
  * goal
  */   
[end] {
 Sb.mLocation == Kuka; 
};
