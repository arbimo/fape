[all] contains sort();
action newShelf(Location l00, Location l01, Location l02, Location le00, Location le01, Location le02){
	l00 != l01;
	l00 != l02;
	l01 != l02;
	le00 != le01;
	le00 != le02;
	le01 != le02;
	constant Position p0;
	pos(l00) == p0;
	pos(l01) == p0;
	pos(l02) == p0;
	constant Position pn0;
	pos(le00) == pn0;
	pos(le01) == pn0;
	pos(le02) == pn0;
	atRightl(l00, l01) == true;
	atRightl(l01, l02) == true;
	atRightl(le00, le01) == true;
	atRightl(le01, le02) == true;
	[start]le00.empty == true;
	[start]le01.empty == true;
	[start]le02.empty == true;
	[start]l00.empty == false;
	[start]l01.empty == false;
	[start]l02.empty == false;
	[all] contains {
		s0 : sort1_3(l00, le00, le01, le02, p0, pn0);
		s1 : sort1_3(l01, le00, le01, le02, p0, pn0);
		s2 : sort1_3(l02, le00, le01, le02, p0, pn0);
	};
	end(s0) < start(s1);
	end(s1) < start(s2);
};
action sort1_3(Location lb, Location l0, Location l1, Location l2, Position p0, Position pn0){
	motivated;
	constant Object b;
	[start] b.at == lb;
	:decomposition {
		l0.empty == true;
		[all] contains moveToEmpty(b,lb,l0,p0,pn0);
	};
	:decomposition {
		l0.empty == false;
		constant Object b0;
		[start]b0.at == l0;
		[all] contains helpSort1_3(b,b0,lb,l0,l1,l2,p0,pn0);
	};
};
action helpSort1_3(Object b, Object b0, Location lb, Location l0, Location l1, Location l2, Position p0, Position pn0){
	motivated;
	:decomposition{
		atRightb(b, b0)==false;
		[all] contains sort1_2(lb, l1, l2,p0,pn0);
	};
	:decomposition{
		atRightb(b, b0)==true;
		constant Arm a;
		[all] a.empty == true;
		[all] contains {
			pi : pick(b0,l0,a,pn0);
			m : moveToEmpty(b,lb,l0,p0,pn0);
			s : sort1_2(a, l1, l2,robot,pn0);
		};
		end(pi) < start(m);
		end(pi) < start(s);
	};
};
action sort1_2(Location lb, Location l0, Location l1, Position p0, Position pn0){
	motivated;
	constant Object b;
	[start] b.at == lb;
	:decomposition {
		l0.empty == true;
		[all] contains moveToEmpty(b,lb,l0,p0,pn0);
	};
	:decomposition {
		l0.empty == false;
		constant Object b0;
		[start]b0.at == l0;
		[all] contains helpSort1_2(b,b0,lb,l0,l1,p0,pn0);
	};
};
action helpSort1_2(Object b, Object b0, Location lb, Location l0, Location l1, Position p0, Position pn0){
	motivated;
	:decomposition{
		atRightb(b, b0)==false;
		[all] contains moveToEmpty(b,lb,l1,p0,pn0);
	};
	:decomposition{
		atRightb(b, b0)==true;
		constant Arm a;
		[all] a.empty == true;
		[all] contains {
			pi : pick(b0,l0,a,pn0);
			m : moveToEmpty(b,lb,l0,p0,pn0);
		s : moveToEmpty(b,a,l1,p0,pn0);
		};
		end(pi) < start(m);
		end(pi) < start(s);
	};
};
action sort(){
	:decomposition{
		true ==false;
/*
		[all] contains {
			s0 : sortPair();
			s1 : sortOdd();
			s2 : sortPair();
		};
		end(s0) < start(s1);
		end(s1) < start(s2);
*/
	};
	:decomposition{
		constant Location l0;
		constant Location l1;
		constant Location l2;
		constant Location l3;
		constant Location l4;
		constant Location l5;
		[all]contains newShelf(l0, l1, l2, l3, l4, l5);
	};
};
instance Object book0_0, book0_1, book0_2;
instance Arm arm0, arm1;
instance Location l0_0, l0_1, l0_2;
instance Location le0_0, le0_1, le0_2;
instance Position p0;
instance Position pe0;
pos(l0_0) := p0;
pos(l0_1) := p0;
pos(l0_2) := p0;
pos(arm0) := robot;
pos(arm1) := robot;
pos(le0_0) := pe0;
pos(le0_1) := pe0;
pos(le0_2) := pe0;

atRightl(l0_0, l0_1) := true;
atRightl(l0_0, l0_2) := true;
atRightl(l0_1, l0_0) := false;
atRightl(l0_1, l0_2) := true;
atRightl(l0_2, l0_0) := false;
atRightl(l0_2, l0_1) := false;
atRightl(le0_0, le0_1) := true;
atRightl(le0_0, le0_2) := true;
atRightl(le0_1, le0_0) := false;
atRightl(le0_1, le0_2) := true;
atRightl(le0_2, le0_0) := false;
atRightl(le0_2, le0_1) := false;
atRightb(book0_0, book0_1) := true;
atRightb(book0_0, book0_2) := true;
atRightb(book0_1, book0_0) := false;
atRightb(book0_1, book0_2) := true;
atRightb(book0_2, book0_0) := false;
atRightb(book0_2, book0_1) := false;
[start] {
	robotPos := p0;
	l0_2.empty := false;
	l0_0.empty := false;
	l0_1.empty := false;
	le0_0.empty := true;
	le0_1.empty := true;
	le0_2.empty := true;
	book0_0.at := l0_2;
	book0_1.at := l0_0;
	book0_2.at := l0_1;
	arm0.empty := true;
	arm1.empty := true;
};
