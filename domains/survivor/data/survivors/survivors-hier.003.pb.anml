instance Robot r1_1, r1_2;
instance Survivor s1, s2;
instance Team team1;
instance Loc l0_0, l0_1, l0_2, l0_3, l1_0, l1_1, l1_2, l1_3, l2_0, l2_1, l2_2, l2_3, l3_0, l3_1, l3_2, l3_3;
instance Zone z0_0, z0_1, z1_0, z1_1;
belong(l0_0,z0_0) := true;
belong(l0_1,z0_0) := true;
belong(l1_0,z0_0) := true;
belong(l1_1,z0_0) := true;
belong(l0_2,z0_1) := true;
belong(l0_3,z0_1) := true;
belong(l1_2,z0_1) := true;
belong(l1_3,z0_1) := true;
belong(l2_0,z1_0) := true;
belong(l2_1,z1_0) := true;
belong(l3_0,z1_0) := true;
belong(l3_1,z1_0) := true;
belong(l2_2,z1_1) := true;
belong(l2_3,z1_1) := true;
belong(l3_2,z1_1) := true;
belong(l3_3,z1_1) := true;

[start] {
	r1_1.team := team1;
	r1_2.team := team1;

	r1_1.at := l0_0;
	r1_2.at := l0_0;

	team1.zone := z0_0; 
	s1.at := l0_1;
 	s2.at := l3_2;
 
};
hospital(l1_2) := true;
 hospital(l2_2) := true;
 
distance (l0_0,l0_0) := 0.0;
distance (l0_0,l0_1) := 1.0;
distance (l0_0,l0_2) := 2.0;
distance (l0_0,l0_3) := 3.0;
distance (l0_0,l1_0) := 1.0;
distance (l0_0,l1_1) := 2.0;
distance (l0_0,l1_2) := 3.0;
distance (l0_0,l1_3) := 4.0;
distance (l0_0,l2_0) := 2.0;
distance (l0_0,l2_1) := 3.0;
distance (l0_0,l2_2) := 4.0;
distance (l0_0,l2_3) := 5.0;
distance (l0_0,l3_0) := 3.0;
distance (l0_0,l3_1) := 4.0;
distance (l0_0,l3_2) := 5.0;
distance (l0_0,l3_3) := 6.0;
distance (l0_1,l0_0) := 1.0;
distance (l0_1,l0_1) := 0.0;
distance (l0_1,l0_2) := 1.0;
distance (l0_1,l0_3) := 2.0;
distance (l0_1,l1_0) := 2.0;
distance (l0_1,l1_1) := 1.0;
distance (l0_1,l1_2) := 2.0;
distance (l0_1,l1_3) := 3.0;
distance (l0_1,l2_0) := 3.0;
distance (l0_1,l2_1) := 2.0;
distance (l0_1,l2_2) := 3.0;
distance (l0_1,l2_3) := 4.0;
distance (l0_1,l3_0) := 4.0;
distance (l0_1,l3_1) := 3.0;
distance (l0_1,l3_2) := 4.0;
distance (l0_1,l3_3) := 5.0;
distance (l0_2,l0_0) := 2.0;
distance (l0_2,l0_1) := 1.0;
distance (l0_2,l0_2) := 0.0;
distance (l0_2,l0_3) := 1.0;
distance (l0_2,l1_0) := 3.0;
distance (l0_2,l1_1) := 2.0;
distance (l0_2,l1_2) := 1.0;
distance (l0_2,l1_3) := 2.0;
distance (l0_2,l2_0) := 4.0;
distance (l0_2,l2_1) := 3.0;
distance (l0_2,l2_2) := 2.0;
distance (l0_2,l2_3) := 3.0;
distance (l0_2,l3_0) := 5.0;
distance (l0_2,l3_1) := 4.0;
distance (l0_2,l3_2) := 3.0;
distance (l0_2,l3_3) := 4.0;
distance (l0_3,l0_0) := 3.0;
distance (l0_3,l0_1) := 2.0;
distance (l0_3,l0_2) := 1.0;
distance (l0_3,l0_3) := 0.0;
distance (l0_3,l1_0) := 4.0;
distance (l0_3,l1_1) := 3.0;
distance (l0_3,l1_2) := 2.0;
distance (l0_3,l1_3) := 1.0;
distance (l0_3,l2_0) := 5.0;
distance (l0_3,l2_1) := 4.0;
distance (l0_3,l2_2) := 3.0;
distance (l0_3,l2_3) := 2.0;
distance (l0_3,l3_0) := 6.0;
distance (l0_3,l3_1) := 5.0;
distance (l0_3,l3_2) := 4.0;
distance (l0_3,l3_3) := 3.0;
distance (l1_0,l0_0) := 1.0;
distance (l1_0,l0_1) := 2.0;
distance (l1_0,l0_2) := 3.0;
distance (l1_0,l0_3) := 4.0;
distance (l1_0,l1_0) := 0.0;
distance (l1_0,l1_1) := 1.0;
distance (l1_0,l1_2) := 2.0;
distance (l1_0,l1_3) := 3.0;
distance (l1_0,l2_0) := 1.0;
distance (l1_0,l2_1) := 2.0;
distance (l1_0,l2_2) := 3.0;
distance (l1_0,l2_3) := 4.0;
distance (l1_0,l3_0) := 2.0;
distance (l1_0,l3_1) := 3.0;
distance (l1_0,l3_2) := 4.0;
distance (l1_0,l3_3) := 5.0;
distance (l1_1,l0_0) := 2.0;
distance (l1_1,l0_1) := 1.0;
distance (l1_1,l0_2) := 2.0;
distance (l1_1,l0_3) := 3.0;
distance (l1_1,l1_0) := 1.0;
distance (l1_1,l1_1) := 0.0;
distance (l1_1,l1_2) := 1.0;
distance (l1_1,l1_3) := 2.0;
distance (l1_1,l2_0) := 2.0;
distance (l1_1,l2_1) := 1.0;
distance (l1_1,l2_2) := 2.0;
distance (l1_1,l2_3) := 3.0;
distance (l1_1,l3_0) := 3.0;
distance (l1_1,l3_1) := 2.0;
distance (l1_1,l3_2) := 3.0;
distance (l1_1,l3_3) := 4.0;
distance (l1_2,l0_0) := 3.0;
distance (l1_2,l0_1) := 2.0;
distance (l1_2,l0_2) := 1.0;
distance (l1_2,l0_3) := 2.0;
distance (l1_2,l1_0) := 2.0;
distance (l1_2,l1_1) := 1.0;
distance (l1_2,l1_2) := 0.0;
distance (l1_2,l1_3) := 1.0;
distance (l1_2,l2_0) := 3.0;
distance (l1_2,l2_1) := 2.0;
distance (l1_2,l2_2) := 1.0;
distance (l1_2,l2_3) := 2.0;
distance (l1_2,l3_0) := 4.0;
distance (l1_2,l3_1) := 3.0;
distance (l1_2,l3_2) := 2.0;
distance (l1_2,l3_3) := 3.0;
distance (l1_3,l0_0) := 4.0;
distance (l1_3,l0_1) := 3.0;
distance (l1_3,l0_2) := 2.0;
distance (l1_3,l0_3) := 1.0;
distance (l1_3,l1_0) := 3.0;
distance (l1_3,l1_1) := 2.0;
distance (l1_3,l1_2) := 1.0;
distance (l1_3,l1_3) := 0.0;
distance (l1_3,l2_0) := 4.0;
distance (l1_3,l2_1) := 3.0;
distance (l1_3,l2_2) := 2.0;
distance (l1_3,l2_3) := 1.0;
distance (l1_3,l3_0) := 5.0;
distance (l1_3,l3_1) := 4.0;
distance (l1_3,l3_2) := 3.0;
distance (l1_3,l3_3) := 2.0;
distance (l2_0,l0_0) := 2.0;
distance (l2_0,l0_1) := 3.0;
distance (l2_0,l0_2) := 4.0;
distance (l2_0,l0_3) := 5.0;
distance (l2_0,l1_0) := 1.0;
distance (l2_0,l1_1) := 2.0;
distance (l2_0,l1_2) := 3.0;
distance (l2_0,l1_3) := 4.0;
distance (l2_0,l2_0) := 0.0;
distance (l2_0,l2_1) := 1.0;
distance (l2_0,l2_2) := 2.0;
distance (l2_0,l2_3) := 3.0;
distance (l2_0,l3_0) := 1.0;
distance (l2_0,l3_1) := 2.0;
distance (l2_0,l3_2) := 3.0;
distance (l2_0,l3_3) := 4.0;
distance (l2_1,l0_0) := 3.0;
distance (l2_1,l0_1) := 2.0;
distance (l2_1,l0_2) := 3.0;
distance (l2_1,l0_3) := 4.0;
distance (l2_1,l1_0) := 2.0;
distance (l2_1,l1_1) := 1.0;
distance (l2_1,l1_2) := 2.0;
distance (l2_1,l1_3) := 3.0;
distance (l2_1,l2_0) := 1.0;
distance (l2_1,l2_1) := 0.0;
distance (l2_1,l2_2) := 1.0;
distance (l2_1,l2_3) := 2.0;
distance (l2_1,l3_0) := 2.0;
distance (l2_1,l3_1) := 1.0;
distance (l2_1,l3_2) := 2.0;
distance (l2_1,l3_3) := 3.0;
distance (l2_2,l0_0) := 4.0;
distance (l2_2,l0_1) := 3.0;
distance (l2_2,l0_2) := 2.0;
distance (l2_2,l0_3) := 3.0;
distance (l2_2,l1_0) := 3.0;
distance (l2_2,l1_1) := 2.0;
distance (l2_2,l1_2) := 1.0;
distance (l2_2,l1_3) := 2.0;
distance (l2_2,l2_0) := 2.0;
distance (l2_2,l2_1) := 1.0;
distance (l2_2,l2_2) := 0.0;
distance (l2_2,l2_3) := 1.0;
distance (l2_2,l3_0) := 3.0;
distance (l2_2,l3_1) := 2.0;
distance (l2_2,l3_2) := 1.0;
distance (l2_2,l3_3) := 2.0;
distance (l2_3,l0_0) := 5.0;
distance (l2_3,l0_1) := 4.0;
distance (l2_3,l0_2) := 3.0;
distance (l2_3,l0_3) := 2.0;
distance (l2_3,l1_0) := 4.0;
distance (l2_3,l1_1) := 3.0;
distance (l2_3,l1_2) := 2.0;
distance (l2_3,l1_3) := 1.0;
distance (l2_3,l2_0) := 3.0;
distance (l2_3,l2_1) := 2.0;
distance (l2_3,l2_2) := 1.0;
distance (l2_3,l2_3) := 0.0;
distance (l2_3,l3_0) := 4.0;
distance (l2_3,l3_1) := 3.0;
distance (l2_3,l3_2) := 2.0;
distance (l2_3,l3_3) := 1.0;
distance (l3_0,l0_0) := 3.0;
distance (l3_0,l0_1) := 4.0;
distance (l3_0,l0_2) := 5.0;
distance (l3_0,l0_3) := 6.0;
distance (l3_0,l1_0) := 2.0;
distance (l3_0,l1_1) := 3.0;
distance (l3_0,l1_2) := 4.0;
distance (l3_0,l1_3) := 5.0;
distance (l3_0,l2_0) := 1.0;
distance (l3_0,l2_1) := 2.0;
distance (l3_0,l2_2) := 3.0;
distance (l3_0,l2_3) := 4.0;
distance (l3_0,l3_0) := 0.0;
distance (l3_0,l3_1) := 1.0;
distance (l3_0,l3_2) := 2.0;
distance (l3_0,l3_3) := 3.0;
distance (l3_1,l0_0) := 4.0;
distance (l3_1,l0_1) := 3.0;
distance (l3_1,l0_2) := 4.0;
distance (l3_1,l0_3) := 5.0;
distance (l3_1,l1_0) := 3.0;
distance (l3_1,l1_1) := 2.0;
distance (l3_1,l1_2) := 3.0;
distance (l3_1,l1_3) := 4.0;
distance (l3_1,l2_0) := 2.0;
distance (l3_1,l2_1) := 1.0;
distance (l3_1,l2_2) := 2.0;
distance (l3_1,l2_3) := 3.0;
distance (l3_1,l3_0) := 1.0;
distance (l3_1,l3_1) := 0.0;
distance (l3_1,l3_2) := 1.0;
distance (l3_1,l3_3) := 2.0;
distance (l3_2,l0_0) := 5.0;
distance (l3_2,l0_1) := 4.0;
distance (l3_2,l0_2) := 3.0;
distance (l3_2,l0_3) := 4.0;
distance (l3_2,l1_0) := 4.0;
distance (l3_2,l1_1) := 3.0;
distance (l3_2,l1_2) := 2.0;
distance (l3_2,l1_3) := 3.0;
distance (l3_2,l2_0) := 3.0;
distance (l3_2,l2_1) := 2.0;
distance (l3_2,l2_2) := 1.0;
distance (l3_2,l2_3) := 2.0;
distance (l3_2,l3_0) := 2.0;
distance (l3_2,l3_1) := 1.0;
distance (l3_2,l3_2) := 0.0;
distance (l3_2,l3_3) := 1.0;
distance (l3_3,l0_0) := 6.0;
distance (l3_3,l0_1) := 5.0;
distance (l3_3,l0_2) := 4.0;
distance (l3_3,l0_3) := 3.0;
distance (l3_3,l1_0) := 5.0;
distance (l3_3,l1_1) := 4.0;
distance (l3_3,l1_2) := 3.0;
distance (l3_3,l1_3) := 2.0;
distance (l3_3,l2_0) := 4.0;
distance (l3_3,l2_1) := 3.0;
distance (l3_3,l2_2) := 2.0;
distance (l3_3,l2_3) := 1.0;
distance (l3_3,l3_0) := 3.0;
distance (l3_3,l3_1) := 2.0;
distance (l3_3,l3_2) := 1.0;
distance (l3_3,l3_3) := 0.0;
distanceZone (z0_0,z0_0) :=0.0;
distanceZone (z0_0,z0_1) :=1.0;
distanceZone (z0_0,z1_0) :=1.0;
distanceZone (z0_0,z1_1) :=1.83;
distanceZone (z0_1,z0_0) :=1.0;
distanceZone (z0_1,z0_1) :=0.0;
distanceZone (z0_1,z1_0) :=1.83;
distanceZone (z0_1,z1_1) :=1.0;
distanceZone (z1_0,z0_0) :=1.0;
distanceZone (z1_0,z0_1) :=1.83;
distanceZone (z1_0,z1_0) :=0.0;
distanceZone (z1_0,z1_1) :=1.0;
distanceZone (z1_1,z0_0) :=1.83;
distanceZone (z1_1,z0_1) :=1.0;
distanceZone (z1_1,z1_0) :=1.0;
distanceZone (z1_1,z1_1) :=0.0;

[end] {
	l0_0.explored == true;
	l0_1.explored == true;
	l0_2.explored == true;
	l0_3.explored == true;
	l1_0.explored == true;
	l1_1.explored == true;
	l1_2.explored == true;
	l1_3.explored == true;
	l2_0.explored == true;
	l2_1.explored == true;
	l2_2.explored == true;
	l2_3.explored == true;
	l3_0.explored == true;
	l3_1.explored == true;
	l3_2.explored == true;
	l3_3.explored == true;

	s1.hospitalized ==true;
 	s2.hospitalized ==true;
 };

action treatSurvivorteam1l1_2(Survivor s, Loc l, Zone z) {
	[all] contains {
		stab : stabilize (r1_1, s, l);
		m : moveToHospitalteam1(s, l, l1_2, z, z0_1);
		hos : hospitalize(s, l1_2);
	};
	belong(l,z);
	[start] {
		s.at == l;
		team1.zone == z;
	};
	start = start(stab);
	end(stab) < start(m);
	end(m) < start(hos);
	end = end(hos);
	[end] team1.zone := z0_1;
};
action treatSurvivorteam1l2_2(Survivor s, Loc l, Zone z) {
	[all] contains {
		stab : stabilize (r1_1, s, l);
		m : moveToHospitalteam1(s, l, l2_2, z, z1_1);
		hos : hospitalize(s, l2_2);
	};
	belong(l,z);
	[start] {
		s.at == l;
		team1.zone == z;
	};
	start = start(stab);
	end(stab) < start(m);
	end(m) < start(hos);
	end = end(hos);
	[end] team1.zone := z1_1;
};

action moveToHospitalteam1(Survivor s, Loc from, Loc to, Zone z1, Zone z2) {
	duration := distance(from,to);
	hospital(to) == true;
	belong(from,z1) == true;
	belong(to,z2) == true;
	[start] {
		s.at == from ;
		s.stabilized == true;
		team1.zone == z1;
	};
	:decomposition { 
		/* move-to-hospital team1 True*/
		[all] contains {
			m : moveSurvivor (r1_1, r1_2, s, from, to);
		};
		from != to;
		r1_1.at == from;
		r1_2.at == from;
		z1 == z2;
	};
	:decomposition { 
		/* move-to-hospital team1 False*/
		[all] contains {
			m : moveSurvivor (r1_1, r1_2, s, from, to);
			mteam : moveTeam(team1, z1, z2);
		};
		from != to;
		r1_1.at == from;
		r1_2.at == from;
		z1 != z2;
	};
};

action explorez0_0team1(){
	[start]team1.zone == z0_0;
	[all] contains {
		move_0_1 : move (r1_1, l0_1, l0_0);
		explore_0_1 : explore ( r1_1, l0_1);
		explore_1_1 : explore ( r1_1, l0_0);
		move_0_2 : move (r1_2, l1_0, l1_1);
		explore_0_2 : explore ( r1_2, l1_0);
		explore_1_2 : explore ( r1_2, l1_1);
	};
	duration := 3;
	end(move_0_1) < start(explore_1_1);
	end(move_0_2) < start(explore_1_2);

	end(explore_0_1) < start(move_0_1);
	end(explore_0_2) < start(move_0_2);
};

action explorez0_1team1(){
	[start]team1.zone == z0_1;
	[all] contains {
		move_0_1 : move (r1_1, l0_3, l0_2);
		explore_0_1 : explore ( r1_1, l0_3);
		explore_1_1 : explore ( r1_1, l0_2);
		move_0_2 : move (r1_2, l1_2, l1_3);
		explore_0_2 : explore ( r1_2, l1_2);
		explore_1_2 : explore ( r1_2, l1_3);
	};
	duration := 3;
	end(move_0_1) < start(explore_1_1);
	end(move_0_2) < start(explore_1_2);

	end(explore_0_1) < start(move_0_1);
	end(explore_0_2) < start(move_0_2);
};

action explorez1_0team1(){
	[start]team1.zone == z1_0;
	[all] contains {
		move_0_1 : move (r1_1, l2_1, l2_0);
		explore_0_1 : explore ( r1_1, l2_1);
		explore_1_1 : explore ( r1_1, l2_0);
		move_0_2 : move (r1_2, l3_0, l3_1);
		explore_0_2 : explore ( r1_2, l3_0);
		explore_1_2 : explore ( r1_2, l3_1);
	};
	duration := 3;
	end(move_0_1) < start(explore_1_1);
	end(move_0_2) < start(explore_1_2);

	end(explore_0_1) < start(move_0_1);
	end(explore_0_2) < start(move_0_2);
};

action explorez1_1team1(){
	[start]team1.zone == z1_1;
	[all] contains {
		move_0_1 : move (r1_1, l2_3, l2_2);
		explore_0_1 : explore ( r1_1, l2_3);
		explore_1_1 : explore ( r1_1, l2_2);
		move_0_2 : move (r1_2, l3_2, l3_3);
		explore_0_2 : explore ( r1_2, l3_2);
		explore_1_2 : explore ( r1_2, l3_3);
	};
	duration := 3;
	end(move_0_1) < start(explore_1_1);
	end(move_0_2) < start(explore_1_2);

	end(explore_0_1) < start(move_0_1);
	end(explore_0_2) < start(move_0_2);
};
