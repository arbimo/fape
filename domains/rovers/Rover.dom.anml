// -*-c++-*-

type Waypoint;
type Camera with {
    constant boolean on_board(Rover r);
    constant boolean supports(Mode m);
    predicate calibrated(Rover r);
};
type Objective;

type Rover with {
    variable Waypoint at;
    constant boolean equipped_for_soil_analysis;
    constant boolean equipped_for_rock_analysis;
    constant boolean equipped_for_imaging;
    constant boolean can_traverse(Waypoint x, Waypoint z);
    predicate have_soil_analysis(Waypoint p);
    predicate have_rock_analysis(Waypoint p);
    predicate have_image(Objective o, Mode m);
    variable boolean empty;
    variable boolean available;
};

type Store with {
    variable boolean empty;
    constant Rover store_of;
};

type Lander with {
    constant Waypoint at_lander;
    variable boolean channel_free;
};

type Mode;

constant boolean visible(Waypoint x, Waypoint y);
constant boolean visible_from(Objective o, Waypoint p);
predicate calibration_target(Camera c, Objective o);
predicate at_soil_sample(Waypoint p);
predicate at_rock_sample(Waypoint p);

predicate communicated_soil_data(Waypoint p);
predicate communicated_rock_data(Waypoint p);
predicate communicated_image_data(Objective o, Mode m);

action navigate(Rover x, Waypoint y, Waypoint z) {
    duration := 15;
    x.can_traverse(y, z) == true;
    visible(y, z) == true;
    [all] {
        x.available == true;
        x.at == y :-> z;
    };
};

action sample_soil(Rover x, Store s, Waypoint p) {
  duration := 6;
    x.equipped_for_soil_analysis == true;
    s.store_of == x;
    [all] {
        x.at == p;
        at_soil_sample(p) == true :-> false;
        s.empty == true :-> false;
        x.have_soil_analysis(p) := true;
    };
};

action sample_rock(Rover x, Store s, Waypoint p) {
 duration := 5;
    x.equipped_for_rock_analysis == true;
    s.store_of == x;
    [all] {
        x.at == p;
        at_rock_sample(p) == true :-> false;
        s.empty == true :-> false;
        x.have_rock_analysis(p) := true;
    };
};

action drop(Rover x, Store y) {
  duration := 3;
    y.store_of == x;
    [all] y.empty == false :-> true;
};

action calibrate(Rover r, Camera i, Objective t, Waypoint w) {
  duration := 3;
    Camera.on_board(i, r) == true;
    r.equipped_for_imaging == true;
    visible_from(t, w) == true;
    [all] {
        calibration_target(i, t) == true;
        r.at == w;
        Camera.calibrated(i, r) := true;
    };
};

action take_image(Rover r, Waypoint p, Objective o, Camera i, Mode m) {
  duration := 3;
    i.on_board(r) == true;
    r.equipped_for_imaging() == true;
    i.supports(m) == true;
    visible_from(o, p) == true;
    [all] {
        Camera.calibrated(i, r) == true :-> false;
        r.at() == p;
        r.have_image(o, m) := true;
    };
};

action communicate_soil_data(Rover r, Lander l, Waypoint p, Waypoint x, Waypoint y) {
  duration := 5;
    visible(x, y) == true;
    l.at_lander == y;
    [all] {
        l.channel_free() == true :-> true;
        r.available() == true :-> true;
        r.at == x;
        r.have_soil_analysis(p) == true;
        communicated_soil_data(p) := true;
    };
};

action communicate_image_data(Rover r, Lander l, Objective o, Mode m, Waypoint x, Waypoint y) {
  duration := 5;
    visible(x, y) == true;
    l.at_lander == y;
    [all] {
        l.channel_free() == true :-> true;
        r.available() == true :-> true;
        r.at == x;
        r.have_image(o, m) == true;
        communicated_image_data(o, m) := true;
    };
};

action communicate_rock_data(Rover r, Lander l, Waypoint p, Waypoint x, Waypoint y) {
  duration := 5;
    visible(x, y) == true;
    l.at_lander == y;
    [all] {
        l.channel_free() == true :-> true;
        r.available() == true :-> true;
        r.at == x;
        r.have_rock_analysis(p) == true;
        communicated_rock_data(p) := true;
    };
};
